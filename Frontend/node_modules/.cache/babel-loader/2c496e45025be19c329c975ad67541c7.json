{"ast":null,"code":"var _jsxFileName = \"/Users/douglas/Desktop/Interview-main/Frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { Routes, Route } from 'react-router';\nimport { fetchData } from './utils';\nimport { CATEGORIES_QUERY, CURRENCIES_QUERY, PRODUCTS_QUERY } from './constants';\nimport AppContext from './context/AppContext';\nimport Home from './components/Home';\nimport Cart from './components/Cart';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    this.componentWillMount = () => {\n      const currentCart = localStorage.getItem('cart');\n      fetchData(CATEGORIES_QUERY).then(_ref => {\n        let {\n          data\n        } = _ref;\n        const categories = data.data.categories;\n        const firstCategory = categories.at(0);\n\n        if (firstCategory) {\n          this.fetchCategoryProducts(firstCategory.name);\n        }\n\n        this.setState({\n          categories\n        });\n        fetchData(CURRENCIES_QUERY).then(_ref2 => {\n          var _currencies$at;\n\n          let {\n            data\n          } = _ref2;\n          const {\n            data: currenciesData\n          } = data;\n          const {\n            currencies\n          } = currenciesData;\n          this.setState({\n            currencies,\n            cart: currentCart ? JSON.parse(currentCart) : [],\n            loading: false,\n            currentCurrency: (_currencies$at = currencies.at(0)) === null || _currencies$at === void 0 ? void 0 : _currencies$at.symbol\n          });\n        }).catch(console.error);\n      }).catch(console.error);\n    };\n\n    this.fetchCategoryProducts = category => {\n      fetchData(PRODUCTS_QUERY, {\n        title: category\n      }).then(_ref3 => {\n        let {\n          data: firstCategoryData\n        } = _ref3;\n        const {\n          category: productsCategory\n        } = firstCategoryData.data;\n        const {\n          products\n        } = productsCategory;\n        this.setState({\n          products,\n          currentCategory: category\n        });\n      });\n    };\n\n    this.addToCart = product => {\n      // if products exist in cart ignore, else add to cart\n      const {\n        cart\n      } = this.state;\n      const productInCart = cart.find(p => p.id === product.id);\n\n      if (productInCart) {\n        return;\n      }\n\n      product.quantity = 1;\n      cart.push(product);\n      localStorage.setItem('cart', JSON.stringify(cart));\n      this.setState({\n        cart\n      });\n    };\n\n    this.updateCart = newCart => {\n      localStorage.setItem('cart', JSON.stringify(newCart));\n      this.setState({\n        cart: newCart\n      });\n    };\n\n    this.getProductPrice = function (product) {\n      let includeQuantity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      const {\n        prices,\n        quantity\n      } = product;\n      const {\n        currentCurrency\n      } = _this.state;\n      let price = prices.at(0);\n\n      if (currentCurrency) {\n        price = prices.find(p => p.currency.symbol === currentCurrency);\n      }\n\n      let amount = price.amount;\n\n      if (quantity && includeQuantity) {\n        amount *= quantity;\n      }\n\n      return `${price.currency.symbol}${Number(amount).toFixed(2)}`;\n    };\n\n    this.handleCategoryChange = category => {\n      this.fetchCategoryProducts(category);\n    };\n\n    this.handleCurrencyChange = currency => {\n      this.setState({\n        currentCurrency: currency\n      });\n    };\n\n    this.state = {\n      cart: [],\n      products: [],\n      currencies: [],\n      categories: [],\n      loading: true,\n      currentCategory: null,\n      currentCurrency: null\n    };\n  }\n\n  render() {\n    const {\n      cart,\n      categories,\n      products,\n      currencies,\n      loading,\n      currentCurrency,\n      currentCategory\n    } = this.state;\n\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        cart,\n        categories,\n        products,\n        currencies,\n        currentCurrency,\n        currentCategory,\n        addToCart: this.addToCart,\n        updateCart: this.updateCart,\n        getProductPrice: this.getProductPrice,\n        handleCategoryChange: this.handleCategoryChange,\n        handleCurrencyChange: this.handleCurrencyChange\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/cart\",\n            element: /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/:category\",\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            index: true,\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","Routes","Route","fetchData","CATEGORIES_QUERY","CURRENCIES_QUERY","PRODUCTS_QUERY","AppContext","Home","Cart","App","constructor","props","componentWillMount","currentCart","localStorage","getItem","then","data","categories","firstCategory","at","fetchCategoryProducts","name","setState","currenciesData","currencies","cart","JSON","parse","loading","currentCurrency","symbol","catch","console","error","category","title","firstCategoryData","productsCategory","products","currentCategory","addToCart","product","state","productInCart","find","p","id","quantity","push","setItem","stringify","updateCart","newCart","getProductPrice","includeQuantity","prices","price","currency","amount","Number","toFixed","handleCategoryChange","handleCurrencyChange","render"],"sources":["/Users/douglas/Desktop/Interview-main/Frontend/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Routes, Route } from 'react-router';\nimport { fetchData } from './utils';\nimport { CATEGORIES_QUERY, CURRENCIES_QUERY, PRODUCTS_QUERY } from './constants';\nimport AppContext from './context/AppContext';\nimport Home from './components/Home';\nimport Cart from './components/Cart';\nimport './App.css';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            cart: [],\n            products: [],\n            currencies: [],\n            categories: [],\n            loading: true,\n            currentCategory: null,\n            currentCurrency: null,\n        };\n    }\n\n    componentWillMount = () => {\n        const currentCart = localStorage.getItem('cart');\n\n        fetchData(CATEGORIES_QUERY)\n            .then(({ data }) => {\n                const categories = data.data.categories;\n                const firstCategory = categories.at(0);\n                if (firstCategory) {\n                    this.fetchCategoryProducts(firstCategory.name);\n                }\n\n                this.setState({\n                    categories,\n                });\n\n                fetchData(CURRENCIES_QUERY)\n                    .then(({ data }) => {\n                        const { data: currenciesData } = data\n                        const { currencies } = currenciesData;\n\n                        this.setState({\n                            currencies,\n                            cart: currentCart ? JSON.parse(currentCart): [],\n                            loading: false,\n                            currentCurrency: currencies.at(0)?.symbol,\n                        })\n                    })\n                    .catch(console.error)\n            })\n            .catch(console.error);\n    };\n\n    fetchCategoryProducts = (category) => {\n        fetchData(PRODUCTS_QUERY, { title: category }).then(\n            ({ data: firstCategoryData }) => {\n                const { category: productsCategory } = firstCategoryData.data;\n                const { products } = productsCategory;\n\n                this.setState({\n                    products,\n                    currentCategory: category,\n                });\n            }\n        );\n    };\n\n    addToCart = (product) => {\n        // if products exist in cart ignore, else add to cart\n        const { cart } = this.state;\n        const productInCart = cart.find((p) => p.id === product.id);\n        if (productInCart) {\n            return;\n        }\n\n        product.quantity = 1;\n\n        cart.push(product);\n        localStorage.setItem('cart', JSON.stringify(cart));\n        this.setState({\n            cart,\n        });\n    }\n\n    updateCart = (newCart) => {\n        localStorage.setItem('cart', JSON.stringify(newCart));\n        this.setState({\n            cart: newCart,\n        });\n    }\n\n    getProductPrice = (product, includeQuantity = false) => {\n        const { prices, quantity } = product;\n        const { currentCurrency } = this.state;\n        let price = prices.at(0);\n        if (currentCurrency) {\n            price = prices.find((p) => p.currency.symbol === currentCurrency);\n        }\n\n        let amount = price.amount;\n        if (quantity && includeQuantity) {\n            amount *= quantity;\n        }\n\n        return `${price.currency.symbol}${Number(amount).toFixed(2)}`;\n    };\n\n    handleCategoryChange = (category) => {\n        this.fetchCategoryProducts(category);\n    };\n\n    handleCurrencyChange = (currency) => {\n        this.setState({\n            currentCurrency: currency,\n        })\n    }\n\n    render() {\n        const { cart, categories, products, currencies, loading, currentCurrency, currentCategory } = this.state;\n\n        if (loading) {\n            return <div className='loading'>Loading...</div>;\n        }\n\n        return (\n            <AppContext.Provider\n                value={{\n                    cart,\n                    categories,\n                    products,\n                    currencies,\n                    currentCurrency,\n                    currentCategory,\n                    addToCart: this.addToCart,\n                    updateCart: this.updateCart,\n                    getProductPrice: this.getProductPrice,\n                    handleCategoryChange: this.handleCategoryChange,\n                    handleCurrencyChange: this.handleCurrencyChange,\n                }}\n            >\n                <div className=\"App\">\n                    <Routes>\n                        <Route exact path='/cart' element={<Cart />}/>\n                        <Route path='/:category' element={<Home />} />\n                        <Route index element={<Home />} />\n                    </Routes>\n                </div>\n            </AppContext.Provider>\n        );\n    }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}